// Generated by CoffeeScript 1.8.0
(function() {
  var Pipe, XunitFilePipe, fs,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  fs = require('fs');

  Pipe = require("./Pipe");

  XunitFilePipe = (function(_super) {
    __extends(XunitFilePipe, _super);

    function XunitFilePipe(stdout, stderr, options) {
      var meteorMagicStatePattern, meteorMagicXunitPattern, outputFile, outputStream;
      this.stdout = stdout;
      this.stderr = stderr;
      this.options = options;
      this.stdout.setEncoding("utf8");
      this.stderr.setEncoding("utf8");
      outputFile = this.options.pipeToFile;
      outputStream = fs.createWriteStream(outputFile, {
        flags: 'w',
        encoding: 'utf8'
      });
      meteorMagicStatePattern = /^##_meteor_magic##state:.*$/gm;
      meteorMagicXunitPattern = /^##_meteor_magic##xunit: /gm;
      this.stdout.on("data", (function(_this) {
        return function(data) {
          var dataWithoutState, stateMatch, xmlOnly;
          dataWithoutState = data;
          stateMatch = data.match(meteorMagicStatePattern);
          if (stateMatch) {
            dataWithoutState = data.replace(meteorMagicStatePattern, '');
            stateMatch.forEach(function(stateMessage) {
              return process.stderr.write(stateMessage + '\n');
            });
          }
          if (dataWithoutState.match(meteorMagicXunitPattern)) {
            xmlOnly = dataWithoutState.replace(meteorMagicXunitPattern, '');
            return outputStream.write(xmlOnly);
          } else {
            return process.stderr.write(data);
          }
        };
      })(this));
      this.stderr.on("data", (function(_this) {
        return function(data) {
          return process.stderr.write(data);
        };
      })(this));
    }

    return XunitFilePipe;

  })(Pipe);

  module.exports = XunitFilePipe;

}).call(this);
