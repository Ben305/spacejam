// Generated by CoffeeScript 1.8.0
(function() {
  var CLI, Spacejam, fs, _;

  fs = require("fs");

  _ = require("underscore");

  Spacejam = require('./Spacejam');

  require.extensions['.txt'] = function(module, filename) {
    return module.exports = fs.readFileSync(filename, 'utf8');
  };

  CLI = (function() {
    var instance;

    instance = null;

    CLI.get = function() {
      return instance != null ? instance : instance = new CLI();
    };

    CLI.prototype.commands = {
      "test-packages": "testPackages",
      "test-in-velocity": "testInVelocity"
    };

    CLI.prototype.spacejam = null;

    function CLI() {
      log.debug("CLI.constructor()");
      process.on('SIGTERM', (function(_this) {
        return function(code) {
          var _ref;
          log.info("spacejam: exiting with code " + code);
          return (_ref = _this.spacejam) != null ? _ref.killChildren() : void 0;
        };
      })(this));
    }

    CLI.prototype.exec = function() {
      var command, err, opts;
      log.debug("CLI.exec()");
      opts = require("rc")("spacejam", {});
      command = opts._[0];
      log.debug("command: " + command);
      if (command === 'help') {
        this.printHelp();
        return;
      }
      if (!_.has(this.commands, command)) {
        if (command) {
          log.error("spacejam: Error: \n'" + command + "' is not a recognized command\n");
        }
        this.printHelp();
      }
      this.spacejam = new Spacejam();
      this.spacejam.on('done', (function(_this) {
        return function(code) {
          return process.exit(code);
        };
      })(this));
      try {
        return this.spacejam[this.commands[command]](opts);
      } catch (_error) {
        err = _error;
        console.trace(err);
        return process.exit(1);
      }
    };

    CLI.prototype.printHelp = function() {
      log.debug("CLI.printHelp()");
      return process.stdout.write(require('../bin/help.txt'));
    };

    return CLI;

  })();

  module.exports = CLI.get();

}).call(this);
